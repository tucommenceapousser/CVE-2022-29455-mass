from multiprocessing.dummy import Pool
import os
from colorama import Fore, Back, Style
import sys
from concurrent.futures import thread
from email import header
import importlib
import requests
import re
requests.packages.urllib3.disable_warnings()

fr = Fore.RED
fc = Fore.CYAN
fw = Fore.WHITE
fg = Fore.GREEN
fy = Fore.YELLOW
fb = Fore.BLUE
sd = Style.DIM
sn = Style.NORMAL
sb = Style.BRIGHT

kepala = {
    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    "accept-encoding": "gzip, deflate, br",
    "accept-language": "en,en-US;q=0.9",
    "cache-control": "max-age=0",
    "dnt": "1",
    "sec-ch-ua-mobile": "?0",
    "sec-fetch-dest": "document",
    "sec-fetch-mode": "navigate",
    "sec-fetch-site": "none",
    "sec-fetch-user": "?1",
    "upgrade-insecure-requests": "1",
    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36"
}


def banner():
    print("""

    CVE-2022-29455

    Mass Scanner
    Dieryy & yaudahbanh

""")

def iya(website):

    try:
        if '://' not in website:
            webnya = 'http://'+website
        else:
            webnya = website

        r = requests.get('{}/wp-content/plugins/elementor/readme.txt'.format(webnya), verify=False, headers=kepala)
        cari = re.findall('(?m)Stable tag: ([0-9.]+)', r.text)

        if 'Elementor Website Builder' in r.text:
            for oke in cari:
                if oke <= '3.5.5':
                    print("{}[+] {}{} {}VULN!".format(fg, fw, webnya, fg))
                    open('vulncve.txt', 'a').write(webnya+'\n')
                else:
                    print("{}[-] {}{} {}NOT VULN!".format(fr, fw, webnya, fr))

        else:
            print('{}[-] {}{} {}Not found elementor!'.format(fr, fw, webnya, fr))

    except Exception:
        pass


if __name__ == "__main__":
    os.system('cls' if os.name == 'nt' else 'clear')
    banner()

    list = sys.argv[1]
    threadnya = sys.argv[2]

    file = open(list, 'r', encoding="utf8").read().splitlines()

    p = Pool(int(threadnya))
    p.map(iya, file)
